AWSTemplateFormatVersion: '2010-09-09'
Description: The template used to create an ECS Cluster from the ECS Console.
Parameters:
  ECSClusterName:
    Type: String
    Description: Specifies the ECS Cluster Name with which the resources would be associated
    Default: CrispyRead
  SecurityGroupIds:
    Type: CommaDelimitedList
    Description: Optional - Specifies the Comma separated list of the Security Group Id of an existing Security Group.
    Default: 'sg-064136c133f8923e7'
  # VpcId:
  #   Type: String
  #   Description: Optional - Specifies the ID of an existing VPC in which to launch your container instances. If you specify a VPC ID, you must specify a list of existing subnets in that VPC. If you do not specify a VPC ID, a new VPC is created with at least 1 subnet.
  #   Default: ''
  #   AllowedPattern: ^(?:vpc-[0-9a-f]{8,17}|)$
  #   ConstraintDescription: VPC Id must begin with 'vpc-' and have a valid uuid
  # SubnetIds:
  #   Type: CommaDelimitedList
  #   Description: Optional - Specifies the Comma separated list of existing VPC Subnet Ids where ECS instances will run
  #   Default: 'subnet-096bee2a4451ac7d5'
  SubnetIds:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: A list of subnets for the Auto Scaling group
  LatestECSOptimizedAMI:
    Description: AMI ID
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ecs/optimized-ami/amazon-linux-2/kernel-5.10/recommended/image_id
  IamRoleInstanceProfile:
    Type: String
    Description: Specifies the Name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instance
    Default: arn:aws:iam::533267437493:instance-profile/ecsInstanceRole




Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref ECSClusterName
      # ClusterSettings:
      #   - Name: containerInsights
      #     Value: disabled
      # Configuration:
      #   ExecuteCommandConfiguration:
      #     Logging: DEFAULT
      # ServiceConnectDefaults:
      #   Namespace: fakeDropbox
      # Tags: []
  
  EC2LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    DependsOn: ECSCluster
    Properties:
      LaunchTemplateData:
        ImageId: !Ref LatestECSOptimizedAMI
        NetworkInterfaces:
          - AssociatePublicIpAddress: true # associate public 1pv4 address to the ec2 instance
            DeviceIndex: 0
            DeleteOnTermination: true
            Groups: !Ref SecurityGroupIds # security group associated with the ec2-instance
        KeyName: ecs # key-pair name to ssh into ec2-instance
        IamInstanceProfile:
          Arn: !Ref IamRoleInstanceProfile
        UserData: !Base64
          Fn::Sub:
            - |-
              #!/bin/bash
              echo ECS_CLUSTER=${ClusterName} >> /etc/ecs/ecs.config;
            - ClusterName: !Ref ECSClusterName
  EC2AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    DependsOn: ECSCluster
    Properties:
      MinSize: '1'
      MaxSize: '1'
      DesiredCapacity: '1'
      MixedInstancesPolicy:
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref EC2LaunchTemplate
            Version: !GetAtt EC2LaunchTemplate.LatestVersionNumber
          Overrides:
            - InstanceType: t2.micro
        # InstancesDistribution:
        #   OnDemandBaseCapacity: 0
        #   OnDemandPercentageAboveBaseCapacity: 0
        #   SpotAllocationStrategy: lowest-price
      VPCZoneIdentifier: !Ref SubnetIds
      Tags:
        - Key: Name
          PropagateAtLaunch: true
          Value: !Join
            - ' - '
            - - ECS Instance
              - !Ref ECSClusterName
  
  EC2CapacityProvider:
    Type: AWS::ECS::CapacityProvider
    Properties:
      AutoScalingGroupProvider:
        AutoScalingGroupArn: !Ref EC2AutoScalingGroup
        ManagedScaling:
          Status: ENABLED
          TargetCapacity: 100
        ManagedTerminationProtection: DISABLED
  
  ClusterCapacityProviderAssociations:
    Type: AWS::ECS::ClusterCapacityProviderAssociations
    Properties:
      Cluster: !Ref ECSClusterName
      CapacityProviders:
        - !Ref EC2CapacityProvider
      DefaultCapacityProviderStrategy:
        - Base: 0
          Weight: 1
          CapacityProvider: !Ref EC2CapacityProvider

  IAMUser:  
      Type: AWS::IAM::User
      Properties:
        UserName: adminUser

  IAMUserPolicy:
    Type: AWS::IAM::UserPolicy
    Properties:
      PolicyName: root
      UserName: !Ref IAMUser
      PolicyDocument: 
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Action: '*'
          Resource: '*'
Outputs:
  ECSCluster:
    Description: The created cluster.
    Value: !Ref ECSCluster